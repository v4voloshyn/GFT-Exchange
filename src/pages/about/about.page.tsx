import { FC } from 'react';
import { Link } from 'react-router-dom';

import './about.scss';

export const About: FC = () => {
  return (
    <div className="about">
      <div className="about-container">
        <h1>Про цей Web Application</h1>
        <p>
          1. Даний застосунок дозволяє конвертувати будь-яку валюту світу в іншу валюту (в тому
          числі і криптовалюту)
        </p>
        <p>
          2. Також однією з функцій застосунку є можливість перегляду вартості однієї валюти
          стосовно інших
        </p>
        <p>
          3. Всі дані про валюти беруться за адресою:{' '}
          <Link to="https://exchangerate.host/#/#docs">
            <mark>https://exchangerate.host/#/#docs;</mark>
          </Link>
          Зображення прапорів формується динамічно в залежності від коду валют які є на сервері.
        </p>
        <p>
          4. При розробці застосунку основна увага приділялась дизайну додатку, стилю та якості коду
          а також доступності додатку з клавіатури.
        </p>
        <p>5. Всю можливу логіку яку можна було абстрагувати від компонента я виносив у хуки.</p>
        <p>
          6. Функціонал додатку відповідає заданим вимогам а також покриває деякі edge-кейси, так
          як:
        </p>
        <ul>
          <li>- від&apos;ємне значення в полі вводу;</li>
          <li>- відсутність одного з обов&apos;язкових query параметрів в URL params;</li>
          <li>- некоректні символи в полі вводу не ламають додаток;</li>
          <li>- debounce поля вводу задля уникнення надмірних запитів на сервер;</li>
          <li>- перевикористання однієї форми на різних сторінках;</li>
          <li>- зображення підвантажуються поступово (lazy loading);</li>
          <li>
            - будь-які помилки запиту чи API ловляться на View шарі і показуються у вигляді попап
            сповіщення задопомогою toastify.
          </li>
          <li>
            - Використовуються лінтери та плагіни для форматування коду та дотримання єдиного
            код-стилю
          </li>
        </ul>
        <br />
        <h4>
          P.S. Якщо код ще не покритий тестами, значить цей процес ще триває і обов&apos;язково
          завершиться в найближчий день-два ;)
        </h4>
        <br />
        <h4>
          P.S.S. Тести будуть unit - я використовую vitest, testing-library/react а також
          testing-library/userEvent як доповнення до другого
        </h4>
      </div>
    </div>
  );
};
